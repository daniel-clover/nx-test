"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
function default_1(tree) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const projects = (0, devkit_1.getProjects)(tree);
        const reactPlugin = '@nx/react/plugins/storybook';
        let shouldIgnoreReactPlugin = false;
        for (const [, config] of projects) {
            let sbConfigPath = (0, devkit_1.joinPathFragments)(config.root, '.storybook/main.ts');
            if (!tree.exists(sbConfigPath)) {
                sbConfigPath = (0, devkit_1.joinPathFragments)(config.root, '.storybook/main.js');
            }
            if (!tree.exists(sbConfigPath)) {
                continue;
            }
            const sbConfig = tree.read(sbConfigPath, 'utf-8');
            if (sbConfig.includes(reactPlugin)) {
                shouldIgnoreReactPlugin = true;
                break;
            }
        }
        if (shouldIgnoreReactPlugin && tree.exists('.eslintrc.json')) {
            (0, devkit_1.updateJson)(tree, '.eslintrc.json', (json) => {
                var _a, _b;
                if ((_a = json.extends) === null || _a === void 0 ? void 0 : _a.includes('plugin:storybook/recommended')) {
                    (_b = json.rules) !== null && _b !== void 0 ? _b : (json.rules = {});
                    json.rules['storybook/no-uninstalled-addons'] = [
                        'error',
                        {
                            ignore: ['@nx/react/plugins/storybook'],
                        },
                    ];
                }
                return json;
            });
        }
        yield (0, devkit_1.formatFiles)(tree);
    });
}
exports.default = default_1;
