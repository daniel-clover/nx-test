"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteNewConfigurationAndCreateNew = exports.createTestUILibNoNgDevkit = void 0;
const tslib_1 = require("tslib");
const js_1 = require("@nx/js");
const linter_1 = require("@nx/linter");
function createTestUILibNoNgDevkit(appTree, libName) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        yield (0, js_1.libraryGenerator)(appTree, {
            linter: linter_1.Linter.EsLint,
            skipFormat: true,
            skipTsConfig: false,
            unitTestRunner: 'none',
            name: libName,
        });
        return appTree;
    });
}
exports.createTestUILibNoNgDevkit = createTestUILibNoNgDevkit;
function deleteNewConfigurationAndCreateNew(appTree, projectStorybookRoot) {
    // Remove new Storybook configuration
    appTree.delete(`.storybook/main.js`);
    appTree.delete(`.storybook/tsconfig.json`);
    appTree.delete(`${projectStorybookRoot}/main.js`);
    appTree.delete(`${projectStorybookRoot}/preview.js`);
    appTree.delete(`${projectStorybookRoot}/tsconfig.json`);
    // Create old Storybook configuration
    appTree.write(`.storybook/addons.js`, 'console.log("hello")');
    appTree.write(`.storybook/webpack.config.js`, 'console.log("hello")');
    appTree.write(`.storybook/tsconfig.json`, '{"test": "hello"}');
    appTree.write(`${projectStorybookRoot}/config.js`, 'console.log("hello")');
    appTree.write(`${projectStorybookRoot}/addons.js`, 'console.log("hello")');
    appTree.write(`${projectStorybookRoot}/webpack.config.js`, 'console.log("hello")');
    appTree.write(`${projectStorybookRoot}/tsconfig.json`, '{"test": "hello"}');
    return appTree;
}
exports.deleteNewConfigurationAndCreateNew = deleteNewConfigurationAndCreateNew;
